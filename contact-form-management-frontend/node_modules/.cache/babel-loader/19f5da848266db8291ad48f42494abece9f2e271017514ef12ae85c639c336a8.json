{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ElifCSE\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\projeler\\\\pokedex\\\\contact-form-management-server\\\\contact-form-management-frontend\\\\src\\\\context\\\\LanguageContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageContext = /*#__PURE__*/createContext();\nexport const LanguageProvider = ({\n  children\n}) => {\n  _s();\n  const [language, setLanguage] = useState('en');\n  return /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n    value: {\n      language,\n      setLanguage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_s(LanguageProvider, \"fVUtOCD1O58HgvMjnE8lxRQa0QA=\");\n_c = LanguageProvider;\nexport const useLanguage = () => {\n  _s2();\n  const context = useContext(LanguageContext);\n  if (context === undefined) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n};\n_s2(useLanguage, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nLanguageProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"names":["createContext","useContext","useState","PropTypes","jsxDEV","_jsxDEV","LanguageContext","LanguageProvider","children","_s","language","setLanguage","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useLanguage","_s2","context","undefined","Error","propTypes","node","isRequired","$RefreshReg$"],"sources":["C:/Users/ElifCSE/OneDrive/Masaüstü/projeler/pokedex/contact-form-management-server/contact-form-management-frontend/src/context/LanguageContext.jsx"],"sourcesContent":["import  { createContext, useContext, useState } from 'react';\r\nimport PropTypes from 'prop-types'; \r\n\r\nconst LanguageContext = createContext();\r\n\r\nexport const LanguageProvider = ({ children }) => {\r\n    const [language, setLanguage] = useState('en');\r\n\r\n    return (\r\n        <LanguageContext.Provider value={{ language, setLanguage }}>\r\n            {children}\r\n        </LanguageContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useLanguage = () => {\r\n    const context = useContext(LanguageContext);\r\n    if (context === undefined) {\r\n        throw new Error('useLanguage must be used within a LanguageProvider');\r\n    }\r\n    return context;\r\n};\r\n\r\nLanguageProvider.propTypes = {\r\n  children: PropTypes.node.isRequired, \r\n};\r\n"],"mappings":";;;AAAA,SAAUA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC5D,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,eAAe,gBAAGN,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMO,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE9C,oBACIG,OAAA,CAACC,eAAe,CAACM,QAAQ;IAACC,KAAK,EAAE;MAAEH,QAAQ;MAAEC;IAAY,CAAE;IAAAH,QAAA,EACtDA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAEnC,CAAC;AAACR,EAAA,CARWF,gBAAgB;AAAAW,EAAA,GAAhBX,gBAAgB;AAU7B,OAAO,MAAMY,WAAW,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC7B,MAAMC,OAAO,GAAGpB,UAAU,CAACK,eAAe,CAAC;EAC3C,IAAIe,OAAO,KAAKC,SAAS,EAAE;IACvB,MAAM,IAAIC,KAAK,CAAC,oDAAoD,CAAC;EACzE;EACA,OAAOF,OAAO;AAClB,CAAC;AAACD,GAAA,CANWD,WAAW;AAQxBZ,gBAAgB,CAACiB,SAAS,GAAG;EAC3BhB,QAAQ,EAAEL,SAAS,CAACsB,IAAI,CAACC;AAC3B,CAAC;AAAC,IAAAR,EAAA;AAAAS,YAAA,CAAAT,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}