{"ast":null,"code":"const BASE_URL = 'http://localhost:5165';\nexport const loginUser = async (username, password) => {\n  const response = await fetch(`${BASE_URL}/api/user/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  });\n  if (!response.ok) {\n    throw new Error('Giriş başarısız.');\n  }\n  const data = await response.json();\n  localStorage.setItem('token', data.token); // Token'ı localStorage'da sakla\n  return data;\n};\nexport const fetchWithAuth = async (url, options = {}) => {\n  const token = localStorage.getItem('token');\n  if (!token) {\n    throw new Error('No token found');\n  }\n  const response = await fetch(url, {\n    ...options,\n    headers: {\n      ...options.headers,\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  if (!response.ok) {\n    throw new Error('Network response was not ok');\n  }\n  if (response.status === 401) {\n    window.location.href = '/login';\n  }\n  if (response.status === 403) {\n    window.location.href = '/not-authorized';\n  }\n  if (!response.ok) {\n    throw new Error('API hatası');\n  }\n  return response.json();\n};","map":{"version":3,"names":["BASE_URL","loginUser","username","password","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","localStorage","setItem","token","fetchWithAuth","url","options","getItem","status","window","location","href"],"sources":["C:/Users/ElifCSE/OneDrive/Masaüstü/projeler/pokedex/contact-form-management-server/contact-form-management-frontend/src/utils/api.jsx"],"sourcesContent":["const BASE_URL = 'http://localhost:5165';\r\nexport const loginUser = async (username, password) => {\r\n  const response = await fetch(`${BASE_URL}/api/user/login`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ username, password }),\r\n  });\r\n\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Giriş başarısız.');\r\n  }\r\n\r\n\r\n  const data = await response.json();\r\n  localStorage.setItem('token', data.token); // Token'ı localStorage'da sakla\r\n  return data;\r\n};\r\n\r\n\r\nexport const fetchWithAuth = async (url, options = {}) => {\r\n  const token = localStorage.getItem('token');\r\n  if (!token) {\r\n    throw new Error('No token found');\r\n  }\r\n\r\n  const response = await fetch(url, {\r\n    ...options,\r\n    headers: {\r\n      ...options.headers,\r\n      'Authorization': `Bearer ${token}`,\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Network response was not ok');\r\n  }\r\n\r\n  if (response.status === 401) {\r\n    window.location.href = '/login';\r\n  }\r\n\r\n  if (response.status === 403) {\r\n    window.location.href = '/not-authorized';\r\n  }\r\n\r\n  if (!response.ok) {\r\n    throw new Error('API hatası');\r\n  }\r\n\r\n  return response.json();\r\n};\r\n\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,uBAAuB;AACxC,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACrD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,iBAAiB,EAAE;IACzDM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,QAAQ;MAAEC;IAAS,CAAC;EAC7C,CAAC,CAAC;EAGF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,kBAAkB,CAAC;EACrC;EAGA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;EAClCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,IAAI,CAACI,KAAK,CAAC,CAAC,CAAC;EAC3C,OAAOJ,IAAI;AACb,CAAC;AAGD,OAAO,MAAMK,aAAa,GAAG,MAAAA,CAAOC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EACxD,MAAMH,KAAK,GAAGF,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI,CAACJ,KAAK,EAAE;IACV,MAAM,IAAIL,KAAK,CAAC,gBAAgB,CAAC;EACnC;EAEA,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAACc,GAAG,EAAE;IAChC,GAAGC,OAAO;IACVb,OAAO,EAAE;MACP,GAAGa,OAAO,CAACb,OAAO;MAClB,eAAe,EAAE,UAAUU,KAAK;IAClC;EACF,CAAC,CAAC;EAEF,IAAI,CAACb,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EAEA,IAAIR,QAAQ,CAACkB,MAAM,KAAK,GAAG,EAAE;IAC3BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EAEA,IAAIrB,QAAQ,CAACkB,MAAM,KAAK,GAAG,EAAE;IAC3BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,iBAAiB;EAC1C;EAEA,IAAI,CAACrB,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,YAAY,CAAC;EAC/B;EAEA,OAAOR,QAAQ,CAACU,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}