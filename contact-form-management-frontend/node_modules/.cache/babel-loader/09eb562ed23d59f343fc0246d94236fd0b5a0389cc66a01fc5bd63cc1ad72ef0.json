{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ElifCSE\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\projeler\\\\pokedex\\\\contact-form-management-server\\\\contact-form-management-frontend\\\\src\\\\components\\\\reports\\\\PieChart.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Chart from \"chart.js/auto\";\nimport { useDarkMode } from \"../../context/DarkModeContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PieChart({\n  chartId,\n  maleCount,\n  femaleCount\n}) {\n  _s();\n  const canvasRef = useRef(null);\n  const chartInstance = useRef(null);\n  const {\n    darkMode\n  } = useDarkMode();\n  useEffect(() => {\n    const context = canvasRef.current.getContext(\"2d\");\n\n    // Define colors based on dark mode\n    const backgroundColors = darkMode ? [\"#007bff\", \"#6e4459\"] // Dark mode colors\n    : [\"#007bff\", \"#ff007f\"]; // Light mode colors (if different)\n\n    const borderColor = darkMode ? \"#ffffff\" : \"#000000\"; // Light mode border color\n\n    if (chartInstance.current) {\n      chartInstance.current.data.datasets[0].data = [maleCount, femaleCount];\n      chartInstance.current.data.datasets[0].backgroundColor = backgroundColors;\n      chartInstance.current.data.datasets[0].borderColor = borderColor;\n      chartInstance.current.update();\n    } else {\n      chartInstance.current = new Chart(context, {\n        type: \"pie\",\n        data: {\n          labels: [\"Male\", \"Female\"],\n          datasets: [{\n            label: \"Gender Distribution\",\n            data: [maleCount, femaleCount],\n            backgroundColor: backgroundColors,\n            borderColor: borderColor,\n            borderWidth: 2\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            title: {\n              display: false,\n              font: {\n                size: 28,\n                weight: \"normal\"\n              },\n              text: \"Gender Distribution\",\n              color: darkMode ? \"white\" : \"black\" // Title color based on dark mode\n            },\n            legend: {\n              labels: {\n                color: darkMode ? \"white\" : \"black\" // Legend text color based on dark mode\n              }\n            }\n          }\n        }\n      });\n    }\n    return () => {\n      if (chartInstance.current) {\n        chartInstance.current.destroy();\n        chartInstance.current = null;\n      }\n    };\n  }, [chartId, maleCount, femaleCount, darkMode]); // Include darkMode in dependency array\n\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    id: `pieChart-${chartId}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 10\n  }, this);\n}\n_s(PieChart, \"HypWvR9VJd2o5bwQlu5n9ogzaTA=\", false, function () {\n  return [useDarkMode];\n});\n_c = PieChart;\nPieChart.propTypes = {\n  chartId: PropTypes.string.isRequired,\n  maleCount: PropTypes.number.isRequired,\n  femaleCount: PropTypes.number.isRequired\n};\nexport default PieChart;\nvar _c;\n$RefreshReg$(_c, \"PieChart\");","map":{"version":3,"names":["useEffect","useRef","PropTypes","Chart","useDarkMode","jsxDEV","_jsxDEV","PieChart","chartId","maleCount","femaleCount","_s","canvasRef","chartInstance","darkMode","context","current","getContext","backgroundColors","borderColor","data","datasets","backgroundColor","update","type","labels","label","borderWidth","options","responsive","maintainAspectRatio","plugins","title","display","font","size","weight","text","color","legend","destroy","ref","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","string","isRequired","number","$RefreshReg$"],"sources":["C:/Users/ElifCSE/OneDrive/Masaüstü/projeler/pokedex/contact-form-management-server/contact-form-management-frontend/src/components/reports/PieChart.jsx"],"sourcesContent":["import { useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Chart from \"chart.js/auto\";\r\nimport { useDarkMode } from \"../../context/DarkModeContext\";\r\n\r\nfunction PieChart({ chartId, maleCount, femaleCount }) {\r\n  const canvasRef = useRef(null);\r\n  const chartInstance = useRef(null);\r\n\r\n  const { darkMode } = useDarkMode();\r\n\r\n  useEffect(() => {\r\n    const context = canvasRef.current.getContext(\"2d\");\r\n\r\n    // Define colors based on dark mode\r\n    const backgroundColors = darkMode\r\n      ? [\"#007bff\", \"#6e4459\"]  // Dark mode colors\r\n      : [\"#007bff\", \"#ff007f\"]; // Light mode colors (if different)\r\n\r\n    const borderColor = darkMode ? \"#ffffff\" : \"#000000\"; // Light mode border color\r\n\r\n    if (chartInstance.current) {\r\n      chartInstance.current.data.datasets[0].data = [maleCount, femaleCount];\r\n      chartInstance.current.data.datasets[0].backgroundColor = backgroundColors;\r\n      chartInstance.current.data.datasets[0].borderColor = borderColor;\r\n      chartInstance.current.update();\r\n    } else {\r\n      chartInstance.current = new Chart(context, {\r\n        type: \"pie\",\r\n        data: {\r\n          labels: [\"Male\", \"Female\"],\r\n          datasets: [\r\n            {\r\n              label: \"Gender Distribution\",\r\n              data: [maleCount, femaleCount],\r\n              backgroundColor: backgroundColors,\r\n              borderColor: borderColor,\r\n              borderWidth: 2,\r\n            },\r\n          ],\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          plugins: {\r\n            title: {\r\n              display: false,\r\n              font: {\r\n                size: 28,\r\n                weight: \"normal\",\r\n              },\r\n              text: \"Gender Distribution\",\r\n              color: darkMode ? \"white\" : \"black\", // Title color based on dark mode\r\n            },\r\n            legend: {\r\n              labels: {\r\n                color: darkMode ? \"white\" : \"black\", // Legend text color based on dark mode\r\n              },\r\n            },\r\n          },\r\n        },\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      if (chartInstance.current) {\r\n        chartInstance.current.destroy();\r\n        chartInstance.current = null;\r\n      }\r\n    };\r\n  }, [chartId, maleCount, femaleCount, darkMode]); // Include darkMode in dependency array\r\n\r\n  return <canvas ref={canvasRef} id={`pieChart-${chartId}`} />;\r\n}\r\n\r\nPieChart.propTypes = {\r\n  chartId: PropTypes.string.isRequired,\r\n  maleCount: PropTypes.number.isRequired,\r\n  femaleCount: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default PieChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}