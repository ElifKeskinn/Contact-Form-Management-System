{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ElifCSE\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\projeler\\\\pokedex\\\\contact-form-management-server\\\\contact-form-management-frontend\\\\src\\\\pages\\\\HomePage.jsx\";\nimport { useState, useEffect } from 'react';\nimport { fetchWithAuth } from '../utils/api';\nimport LoginPage from './LoginPage';\nimport ContactForm from '../components/messages/ContactForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nuseEffect(() => {\n  const fetchCountries = async () => {\n    try {\n      const data = await fetchWithAuth('/api/countries');\n      setCountries(data);\n    } catch (err) {\n      console.error('Ülkeler yüklenirken hata oluştu:', err);\n    }\n  };\n  fetchCountries();\n}, []);\nconst HomePage = () => {\n  const da = [{\n    code: 'US',\n    name: 'United States'\n  }, {\n    code: 'TR',\n    name: 'Turkey'\n  }\n  // Diğer ülkeler\n  ];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ho\\u015Fgeldiniz!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n      countries: countries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["useState","useEffect","fetchWithAuth","LoginPage","ContactForm","jsxDEV","_jsxDEV","fetchCountries","data","setCountries","err","console","error","HomePage","da","code","name","children","fileName","_jsxFileName","lineNumber","columnNumber","countries","_c","$RefreshReg$"],"sources":["C:/Users/ElifCSE/OneDrive/Masaüstü/projeler/pokedex/contact-form-management-server/contact-form-management-frontend/src/pages/HomePage.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { fetchWithAuth } from '../utils/api';\r\nimport LoginPage from './LoginPage';\r\nimport ContactForm from '../components/messages/ContactForm';\r\n\r\n  useEffect(() => {\r\n    const fetchCountries = async () => {\r\n      try {\r\n        const data = await fetchWithAuth('/api/countries');\r\n        setCountries(data);\r\n      } catch (err) {\r\n        console.error('Ülkeler yüklenirken hata oluştu:', err);\r\n      }\r\n    };\r\n\r\n    fetchCountries();\r\n  }, []);\r\n\r\n  const HomePage = () => {\r\n    const da = [\r\n      { code: 'US', name: 'United States' },\r\n      { code: 'TR', name: 'Turkey' },\r\n      // Diğer ülkeler\r\n    ];\r\n\r\n    return (\r\n    <div>\r\n      <h1>Hoşgeldiniz!</h1>\r\n      <LoginPage />\r\n      <ContactForm countries={countries} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,aAAa,QAAQ,cAAc;AAC5C,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,WAAW,MAAM,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3DL,SAAS,CAAC,MAAM;EACd,MAAMM,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMN,aAAa,CAAC,gBAAgB,CAAC;MAClDO,YAAY,CAACD,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAEF,GAAG,CAAC;IACxD;EACF,CAAC;EAEDH,cAAc,CAAC,CAAC;AAClB,CAAC,EAAE,EAAE,CAAC;AAEN,MAAMM,QAAQ,GAAGA,CAAA,KAAM;EACrB,MAAMC,EAAE,GAAG,CACT;IAAEC,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAgB,CAAC,EACrC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAS;EAC7B;EAAA,CACD;EAED,oBACAV,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBf,OAAA,CAACH,SAAS;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACbf,OAAA,CAACF,WAAW;MAACkB,SAAS,EAAEA;IAAU;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV,CAAC;AAACE,EAAA,GAdMV,QAAQ;AAgBhB,eAAeA,QAAQ;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}